create database tapDB;


-- CITY
create table city(
	id serial primary key,
	name varchar(50) not null
);


insert into city (name)
values
	('Plovdiv'),
	('Sofia');
	
	

create table intern(
	id serial primary key,
	name varchar(50) not null,
	email varchar(50) not null,
	phone varchar(10) not null,
	city_id int not null,
	constraint fk_intern_city
		foreign key (city_id)
		references city(id)
);

insert into intern 
	(name, email, phone, city_id)
values
	('Name1', 'email1@email1', '1111111111',1),
	('Name2', 'email2@email2', '2222222222',2),
	('Name3', 'email3@email3', '3333333333',2),
	('Name4', 'email4@email4', '4444444444',1),
	('Name5', 'email5@email5', '5555555555',2);
	


create table tutor(
	id serial primary key,
	name varchar(50)
);

create table lecture(
	id serial primary key,
	topic varchar(50) not null,
	date timestamp
);

create table tutor_lecture(
	tutor_id int not null,
	lecture_id int not null,
	constraint pk_tutor_lecture primary key (tutor_id, lecture_id),
	constraint fk_tutor_tutor_lecture foreign key (tutor_id) references tutor(id) on update cascade,
	constraint fk_lecture_tutor_lecture foreign key (lecture_id) references lecture(id) on update cascade
);



insert into tutor (name)
values
	('Tutor1'),
	('Tutor2'),
	('Tutor3');
	
insert into lecture (topic, date)
values
	('RDB', '2021-12-06'),
	('JPA', '2021-12-07');
	
insert into tutor_lecture
values
	(1, 1),
	(3, 2)
	

create table track(
	id serial primary key,
	name varchar(50)
);

insert into track (name)
values
	('Cloud-native'),
	('Data analytics'),
	('DevOps');

create table track_lecture(
	track_id int not null,
	lecture_id int not null,
	constraint pk_track_lecture primary key (track_id, lecture_id),
	constraint fk_track_track_lecture foreign key (track_id) references track(id) on update cascade,
	constraint fk_lecture_track_lecture foreign key (lecture_id) references lecture(id) on update cascade
);

insert into track_lecture
values
	(1,1),
	(1,2),
	(2,1),
	(2,2)
	

create table track_intern(
	track_id int not null,
	intern_id int not null,
	constraint pk_track_intern primary key (track_id, intern_id),
	constraint fk_track_track_intern foreign key (track_id) references track(id) on update cascade,
	constraint fk_intern_track_intern foreign key (intern_id) references intern(id) on update cascade
);

insert into track_intern
values
	(1,1),
	(1,2),
	(2,3),
	(2,4),
	(3,5);

create table assesment_results(
	id serial primary key,
	result int not null
);

insert into assesment_results(result)
values
	(70),
	(80),
	(100),
	(96)
	
create table intern_result(
	intern_id int not null,
	result_id int not null,
	constraint pk_intern_result primary key (intern_id, result_id),
	constraint fk_intern_result foreign key (intern_id) references intern(id) on update cascade,
	constraint fk_result_intern foreign key (result_id) references assesment_results(id) on update cascade
);

insert into intern_result
values
	(1,1),
	(2,2),
	(4,3),
	(5,4)
	
create table intern_result(
	intern_id int not null,
	result_id int not null,
	constraint pk_intern_result primary key (intern_id, result_id),
	constraint fk_intern_result foreign key (intern_id) references intern(id) on update cascade,
	constraint fk_result_intern foreign key (result_id) references assesment_results(id) on update cascade
);
 
create table track_result(
	track_id int not null,
	result_id int not null,
	constraint pk_track_result primary key (track_id, result_id),
	constraint fk_track_result foreign key (track_id) references track(id) on update cascade,
	constraint fk_result_track foreign key (result_id) references assesment_results(id) on update cascade
);

insert into track_result
values
	(1,1),
	(2,2),
	(3,1),
	(1,2);

