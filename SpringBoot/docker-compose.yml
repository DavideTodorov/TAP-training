version: '3.8'

volumes:
  data:

networks:
  my-network:
    driver: bridge

services:
  db:
    hostname: db
    image: "postgres:latest"
    restart: always
    container_name: db
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: springAppDB
    ports:
      - "5432:5432"
    networks:
      - my-network

  user-service:
    hostname: user-service
    container_name: user-service
    build: /SpringBoot/UserService/
    restart: always
    networks:
      - my-network
    ports:
      - "8050:8081"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/springAppDB
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  address-service:
    hostname: address-service
    container_name: address-service
    build: SpringBoot/AddressService/
    restart: always
    networks:
      - my-network
    ports:
      - "8060:8082"
    depends_on:
      - db
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/springAppDB
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=root
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update


  transaction-service:
    hostname: transaction-service
    container_name: transaction-service
    build: SpringBoot/TransactionService/
    restart: always
    networks:
      - my-network
    ports:
      - "8070:8083"

  transaction-3rd-api:
    hostname: transaction-3rd-api
    container_name: transaction-3rd-api
    build: SpringBoot/FastApiDemo-master copy 2/
    restart: always
    networks:
      - my-network
    ports:
      - "8040:8000"

